from huggingface_hub import login, upload_folder, snapshot_download, HfApi
import os
import subprocess
from dotenv import load_dotenv
import sys
load_dotenv()

HF_TOKEN = os.getenv("hf_token")
USERNAME = "ahashanahmed"
REPO_NAME = "csv"
REPO_ID = f"{USERNAME}/{REPO_NAME}"

def hf_login(token=None):
    if token:
        login(token=token)
def is_valide_diractory(local_dir:str)->bool:
    return os.path.isdir(local_dir) and len(os.listdir(local_dir))>0
    

def create_repo_if_not_exists(repo_id: str = REPO_ID, token: str = HF_TOKEN):
    api = HfApi()
    try:
        api.repo_info(repo_id=repo_id, repo_type="model", token=token)
        print(f"‚ÑπÔ∏è Repo '{repo_id}' already exists.")
    except:
        api.create_repo(repo_id=repo_id, repo_type="model", private=False, token=token)
        print(f"‚úÖ Created repo: {repo_id}")

def upload_to_hf(folder_path: str = "./csv", repo_id: str = REPO_ID, token: str = HF_TOKEN):
    hf_login(token)
    create_repo_if_not_exists(repo_id, token)
    print(f"üì§ Uploading folder: {folder_path} ‚Üí {repo_id}")
    upload_folder(folder_path=folder_path, repo_id=repo_id, repo_type="model", token=token)
    print("‚úÖ Upload complete.")

def download_from_hf_or_run_script(repo_id: str = REPO_ID, local_dir: str = "./csv", token: str = HF_TOKEN):
    create_repo_if_not_exists()
    # Step 1: ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ csv ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‡¶ö‡ßá‡¶ï
    if is_valide_diractory(local_dir):
     return print("‚úÖ ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ './csv' ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶•‡ßá‡¶ï‡ßá‡¶á ‡¶Ü‡¶õ‡ßá‡•§ ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶≤‡¶æ‡¶ó‡¶¨‡ßá ‡¶®‡¶æ‡•§")
   

    print("üîç ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ './csv' ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶®‡ßá‡¶á, HF ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡¶õ‡¶ø...")

    # Step 2: HF ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶°
    try:
        hf_login(token)
        temp_path = snapshot_download(
            repo_id=repo_id,
            repo_type="model",
            allow_patterns=["csv/**"],
            token=token
        )
        hf_csv_path = os.path.join(temp_path, "csv")
        if os.path.exists(hf_csv_path):
            print("üì• HF-‡¶è csv ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶ó‡ßá‡¶õ‡ßá, ‡¶≤‡ßã‡¶ï‡¶æ‡¶≤ ./csv-‡¶è ‡¶ï‡¶™‡¶ø ‡¶ï‡¶∞‡¶õ‡¶ø...")
            import shutil
            shutil.copytree(hf_csv_path, local_dir)
            print("‚úÖ ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶ì ‡¶ï‡¶™‡¶ø ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶® ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§")
        else:
            raise FileNotFoundError("‚ùå HF-‡¶è 'csv' ‡¶´‡ßã‡¶≤‡ßç‡¶°‡¶æ‡¶∞ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§")

    except Exception as e:
        print(f"‚ö†Ô∏è HF ‡¶•‡ßá‡¶ï‡ßá ‡¶°‡¶æ‡¶â‡¶®‡¶≤‡ßã‡¶° ‡¶¨‡ßç‡¶Ø‡¶∞‡ßç‡¶•: {e}")
        
     

# ‚èØÔ∏è ‡¶ö‡¶æ‡¶≤‡¶æ‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá
if __name__ == "__main__":
    download_from_hf_or_run_script()
